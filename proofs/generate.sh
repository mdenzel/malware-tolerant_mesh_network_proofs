#!/bin/bash

#
#  @title:    Malware-Tolerant Network
#  @authors:  
#  @date:     2018-02-26
#
#  Shellscript to generate and run ProVerif proofs for 1_get_ticket.gen, 2_veto.gen, and 3_bridge_join.gen
#


#global variables
prefix=./proofs-
files="1_get_ticket.gen 2_veto.gen 3_bridge_join.gen"

function generate(){
	input="./"$1
	folder=$2
	IFS=' ';
	flags=($3)

	echo "generating ProVerif proofs: \"$folder\""
    mkdir -p $folder
    counter=1
    #	none compromised
    cpp ${flags[@]} -P $input -o $folder/$counter\_none_compromised.pv 2>/dev/null
    counter=$((counter+1))
    #----------------------------------------
    # proofs for 1 compromised
    #   d compromised
    cpp ${flags[@]} -Dd_COMPR -P $input -o $folder/$counter\_d_compromised.pv 2>/dev/null
    counter=$((counter+1))
    if [ "$1" == "1_get_ticket.gen" ]; then
        #   d1/d2 compromised
        cpp ${flags[@]} -Dd1_COMPR -P $input -o $folder/$counter\_d1_compromised.pv 2>/dev/null
        counter=$((counter+1))
        cpp ${flags[@]} -Dd2_COMPR -P $input -o $folder/$counter\_d2_compromised.pv 2>/dev/null
        counter=$((counter+1))
    fi
    #	A compromised
    cpp ${flags[@]} -DA_COMPR -P $input -o $folder/$counter\_A_compromised.pv 2>/dev/null
    counter=$((counter+1))
    #	B compromised
    cpp ${flags[@]} -DB_COMPR -P $input -o $folder/$counter\_B_compromised.pv 2>/dev/null
    counter=$((counter+1))
    #----------------------------------------
    # proofs for 2 compromised

    #   d and A compromised
    cpp ${flags[@]} -Dd_COMPR -DA_COMPR -P $input -o $folder/$counter\_d_A_compromised.pv 2>/dev/null
    counter=$((counter+1))
    #   d and B compromised
    cpp ${flags[@]} -Dd_COMPR -DB_COMPR -P $input -o $folder/$counter\_d_B_compromised.pv 2>/dev/null
    counter=$((counter+1))

    if [ "$1" == "1_get_ticket.gen" ]; then
        #   d and d1 compromised
        cpp ${flags[@]} -Dd_COMPR -Dd1_COMPR -P $input -o $folder/$counter\_d_d1_compromised.pv 2>/dev/null
        counter=$((counter+1))
        #   d1 and A compromised
        cpp ${flags[@]} -Dd1_COMPR -DA_COMPR -P $input -o $folder/$counter\_d1_A_compromised.pv 2>/dev/null
        counter=$((counter+1))
        #   d1 and B compromised
        cpp ${flags[@]} -Dd1_COMPR -DB_COMPR -P $input -o $folder/$counter\_d1_B_compromised.pv 2>/dev/null
        counter=$((counter+1))
        #   d1 and d2 compromised
        cpp ${flags[@]} -Dd1_COMPR -Dd2_COMPR -P $input -o $folder/$counter\_d1_d2_compromised.pv 2>/dev/null
        counter=$((counter+1))
    fi

    #   A and B compromised
    cpp ${flags[@]} -DA_COMPR -DB_COMPR -P $input -o $folder/$counter\_A_B_compromised.pv 2>/dev/null
    counter=$((counter+1))
    #----------------------------------------
    # proofs for 3 compromised

    if [ "$1" == "1_get_ticket.gen" ]; then
        #   d, d1, A compromised
        cpp ${flags[@]} -Dd_COMPR -Dd1_COMPR -DA_COMPR -P $input -o $folder/$counter\_d_d1_A_compromised.pv 2>/dev/null
        counter=$((counter+1))
        #   d, d2, A compromised
        cpp ${flags[@]} -Dd_COMPR -Dd2_COMPR -DA_COMPR -P $input -o $folder/$counter\_d_d2_A_compromised.pv 2>/dev/null
        counter=$((counter+1))
        #   d, A, B compromised
        cpp ${flags[@]} -Dd_COMPR -DA_COMPR -DB_COMPR -P $input -o $folder/$counter\_d_A_B_compromised.pv 2>/dev/null
        counter=$((counter+1))
        #   d, d1, d2 compromised
        cpp ${flags[@]} -Dd_COMPR -Dd1_COMPR -Dd2_COMPR -P $input -o $folder/$counter\_d_d1_d2_compromised.pv 2>/dev/null
        counter=$((counter+1))
        #   d1, d2, A compromised
        cpp ${flags[@]} -Dd1_COMPR -Dd2_COMPR -DA_COMPR -P $input -o $folder/$counter\_d1_d2_A_compromised.pv 2>/dev/null
        counter=$((counter+1))
        #   d1, A, B compromised
        cpp ${flags[@]} -Dd1_COMPR -DA_COMPR -DB_COMPR -P $input -o $folder/$counter\_d1_A_B_compromised.pv 2>/dev/null
        counter=$((counter+1))
    fi
    
    #----------------------------------------
    #   all compromised
    cpp ${flags[@]} -Dd_COMPR -DA_COMPR -DB_COMPR -P $input -o $folder/$counter\_all_compromised.pv 2>/dev/null
}

for f in $files; do
	IFS=',';
	ops=($f) #make array
	name=${ops[0]} #get first entry
	ops="${ops[@]:1}" #remove first entry
	folder=$prefix$name`echo "$ops" | tr -d ' '`

	#generate files
	generate $name $folder $ops
done
